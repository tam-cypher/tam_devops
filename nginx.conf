events {
  worker_connections 4096;
}
http {

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }
  upstream backend {
    server localhost:8501;
  }
  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;
  keepalive_timeout   650;
  types_hash_max_size 4096;
  include mime.types;
  include             /etc/nginx/mime.types;
  default_type        application/octet-stream;
  server {
    listen 80;

    # Keepalive Connection
    keepalive_timeout 1200;
    proxy_send_timeout          31536000;                                                                                                                                                
    proxy_read_timeout          31536000;                                                                                                                                                
    proxy_connect_timeout       31536000;                                                                                                                                                
    client_max_body_size 50m ;                                                                                                                                                           
    reset_timedout_connection on;     
    location / {
      try_files $uri $uri/ /index.html;
      root /usr/share/nginx/html;
      index index.html index.htm;
      add_header Last-Modified $date_gmt;
      add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      if_modified_since off;
      expires off;
      etag off;
    }

    location = /hummingbot {
        return 301 /hummingbot/;
    }
    location ~* /hummingbot/.* {
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;

      # Fix the â€œIt appears that your reverse proxy set up is broken" error.
      proxy_pass          http://127.0.0.1:8501;
      rewrite ^/hummingbot(/.*)$ $1 break;

      # WebSocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location = /portainer {
            return 301 /portainer/;
    }

    location ~* /portainer/.* {
        proxy_pass http://127.0.0.1:9000;
        rewrite ^/portainer(/.*)$ $1 break;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Origin "";
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location = /emqx {
            return 301 /emqx/;
    }

    location ~* /emqx/.* {
        proxy_pass http://127.0.0.1:18083;
        rewrite ^/emqx(/.*)$ $1 break;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Origin "";
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }


    location = /pgadmin {
        return 301 /pgadmin/;
    }

    location ~* /pgadmin/.* {
        proxy_pass http://127.0.0.1:8001;
        #rewrite ^/pgadmin(/.*)$ $1 break;
        proxy_set_header X-Script-Name /pgadmin;             
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Origin "";
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location = /grafana {
        return 301 /grafana/;
    }

    location ~* /grafana/.* {
        proxy_pass http://127.0.0.1:3000;
        rewrite ^/grafana(/.*)$ $1 break;
        proxy_set_header X-Script-Name /pgadmin;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Origin "";
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    # location = /filebrowser {
    #     return 301 /filebrowser/;
    # }

    location ~* /filebrowser/.* {
        # prevents 502 bad gateway error
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;

        client_max_body_size 75M;

        # redirect all HTTP traffic to localhost:8088;
        proxy_pass http://localhost:8002;
        #rewrite ^/filebrowser(/.*)$ $1 break;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-NginX-Proxy true;

        # enables WS support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 999999999;
    }
    

    error_page 404 /404.html;
    location = /404.html {
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {

    }
  }
}  

